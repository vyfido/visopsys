//
//  Visopsys
//  Copyright (C) 1998-2020 J. Andrew McLaughlin
//
//  This library is free software; you can redistribute it and/or modify it
//  under the terms of the GNU Lesser General Public License as published by
//  the Free Software Foundation; either version 2.1 of the License, or (at
//  your option) any later version.
//
//  This library is distributed in the hope that it will be useful, but
//  WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser
//  General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public License
//  along with this library; if not, write to the Free Software Foundation,
//  Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
//  istream

// This is the Visopsys version of the standard C++ header file istream

#ifndef _ISTREAM_HPP
#define _ISTREAM_HPP

#include <ios>

namespace std {

	class ios_base
	{
		public:
			class Init
			{
				friend class ios_base;

				public:
					Init();
					~Init();

				private:
					static int refCount;
			};

		protected:
			ios_base();
	};

	template <class charT, class traits = char_traits<charT> >
	class basic_ios : ios_base
	{
		public:
			typedef charT						char_type;
			typedef traits						traits_type;
			typedef typename traits::int_type	int_type;
			typedef typename traits::pos_type	streampos;
			typedef typename traits::off_type	streamoff;

			// Const/dest
			explicit basic_ios(basic_streambuf<charT, traits> *);

		protected:
			basic_ios();
	};

	typedef basic_ios<char> ios;

	template <class charT, class traits = char_traits<charT> >
	class basic_istream : basic_ios<charT, traits>
	{
		public:
			// Const/dest
			explicit basic_istream(basic_streambuf<charT, traits> *);
			virtual ~basic_istream();

			// Member functions
			basic_istream& operator>>(charT&);
			basic_istream& operator>>(charT *);
	};

	typedef basic_istream<char> istream;

	template <class charT, class traits = char_traits<charT> >
	class basic_iostream :
		basic_istream<charT, traits>, basic_ostream<charT, traits>
	{
		public:
			// Const/dest
			explicit basic_iostream(basic_streambuf<charT, traits> *);
			virtual ~basic_iostream();
	};

	typedef basic_iostream<char> iostream;
}

#endif

